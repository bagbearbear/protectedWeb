<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">


	<resultMap id="reviewSelectMap" type="review">
		<!-- Flied -->
		<result property="postNo" 				column="POST_NO" 		jdbcType="NUMERIC" />
		<result property="boardCode" 			column="BOARD_CODE" 	jdbcType="CHAR" />
		<result property="id" 					column="ID" 			jdbcType="VARCHAR" />
		<result property="nickName" 			column="NICKNAME"       jdbcType="VARCHAR" />
		<result property="postTitle" 			column="POST_TITLE"     jdbcType="VARCHAR" />
		<result property="postContent" 			column="POST_CONTENT"   jdbcType="VARCHAR" />
		<result property="regDate" 				column="REG_DATE"       jdbcType="DATE" />
		<result property="statusCode" 			column="STATUS_CODE"    jdbcType="CHAR" />
		
		<!-- nullable -->
		<result property="grade" 				column="GRADE"          jdbcType="NUMERIC" />
		<result property="orderNo" 				column="ORDER_NO"       jdbcType="NUMERIC" />
		<result property="hospitalName" 	    column="HOSPITAL_NAME"  jdbcType="VARCHAR" />

	</resultMap>



	<!-- SQL : INSERT -->
	<insert id="addReview" parameterType="review">
		<selectKey keyProperty="postNo" resultType="int" order="BEFORE">
		SELECT SEQ_REVIEW_POST_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT
			INTO REVIEW( POST_NO, BOARD_CODE, ID, NICKNAME, POST_TITLE, POST_CONTENT, REG_DATE, STATUS_CODE , GRADE , ORDER_NO , HOSPITAL_NAME)		
				VALUES (#{postNo}, #{boardCode:CHAR}, #{id:VARCHAR}, #{nickName:VARCHAR}, #{postTitle:VARCHAR}, #{postContent:VARCHAR}, SYSDATE, 1, #{grade:NUMERIC}, #{orderNo:NUMERIC}, #{hospitalName:VARCHAR})
	</insert>
		
  <!-- SQL : SELECT ONE -->
	 <select 	id="getReview"	parameterType="int"		resultMap="reviewSelectMap">
	SELECT
	POST_NO, BOARD_CODE, ID, NICKNAME, POST_TITLE, POST_CONTENT, REG_DATE, STATUS_CODE , GRADE , ORDER_NO , HOSPITAL_NAME
		FROM REVIEW
			WHERE POST_NO IN #{value}
	
	</select>
	<!-- 
	SQL : UPDATE
	<update id="updateReview"	parameterType="review">
	UPDATE REVIEW
	<set>
		POST_TITLE			=	#{postTitle} , 
		POST_CONTENT		=	#{postContent} , 
		GRADE				=	#{grade:NUMERIC}
	</set>
	WHERE POST_NO=#{postNo}
	</update>
	
	<update	id="delReview"	parameterType="review" >
	   	UPDATE REVIEW
		<set>
		STATUS_CODE = '0'
		</set>
	   	WHERE POST_NO = #{postNo}
	 </update>
	 
	 SQL : SELECT LIST
	<select  id="listReview"  parameterType="map"	resultMap="reviewSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
  				FROM ( SELECT POST_NO, BOARD_CODE, ID, NICKNAME, POST_TITLE , POST_CONTENT)
						FROM REVIEW
						<where>
								BOARD_CODE = #{boardCode} AND STATUS_CODE != '0'
								<if test="searchCondition != null">
									<if test="searchCondition == 0 and searchKeyword !='' ">
							 			AND POST_TITLE  LIKE '%'||#{searchKeyword}||'%' 
									</if>
									<if test="searchCondition == 1 and searchKeyword !='' ">
										AND NICKNAME  LIKE '%'||#{searchKeyword}||'%'
							 			OR ID        LIKE '%'||#{searchKeyword}||'%'
									</if>
									<if test="searchCondition == 2 and searchKeyword !='' ">
							 			AND POST_CONTENT LIKE '%'||#{searchKeyword}||'%' 
									</if> 
								</if>
						</where>
						ORDER BY POST_NO  ) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
 	
 -->
</mapper>